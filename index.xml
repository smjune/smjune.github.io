<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>MyoungJune Sung says Hello Wrold</title><link>https://smjune.github.io/</link><description>Recent content on MyoungJune Sung says Hello Wrold</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Feb 2023 18:07:51 +0900</lastBuildDate><atom:link href="https://smjune.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Pyenv</title><link>https://smjune.github.io/posts/pyenv/</link><pubDate>Thu, 09 Feb 2023 18:07:51 +0900</pubDate><guid>https://smjune.github.io/posts/pyenv/</guid><description>Pyenv 사용하기 $ pyenv versions * system (set by /home/june.sung/.pyenv/version) 2.7.17 $ pyenv install --list $ pyenv install 3.6.9 * system (set by /home/june.sung/.pyenv/version) 2.7.17 3.6.9 $ pyenv shell 3.6.9 $ pyenv which python 3.6.9 (set by PYENV_VERSION environment variable) # $ pyevn [ global &amp;gt; local &amp;gt; shell ] X.X.X # cat ~/.pyenv/version | cat .pyton-version | echo $PYENV_VERSION # loacal 은 해당 폴더 아래 (set by ~폴더/.python-version) python 설정 (해당 폴더 나가면 해제) # Shell 은 해당 터미널 (set by PYENV_VERSION) 에 python 설정 (해당 터미널 나가면 해제) $ virtualevn -p $(pyenv which python) .</description></item><item><title>Gitlab</title><link>https://smjune.github.io/posts/gitlab/</link><pubDate>Mon, 06 Feb 2023 20:28:27 +0900</pubDate><guid>https://smjune.github.io/posts/gitlab/</guid><description>GitLab 으로 Deploy 하기 github 에 deploy 했던 hugo project 을 git remote 만 추가하서 gitlab repo 에 push 하고,
gitlab CI/CD 을 이용하여 build, deploy 하는 방법
이미 github 에서 main 이라는 브랜치명을 사용했으므로, gitlab 에서는 다른 이름을 사용하여야 함.
gitlab.com/smjune/smjune.io 만들기 $ cd &amp;#39;exiting git project&amp;#39; $ git remote add gitlab https://gitlab.com/smjune/smjune.gitlab.io/ # origin 이란 이름 대신 gitlab 이란 이름으로 remote을 설정 $ git branch -M gitlabmain $ git push -uf gitlab gitlabmain # 현재 checkout 한 브랜치를 gitlabmain 으로 변경하고, 이것을 gitlab 리모트와 연결 # 나중에 main 을 다시 github remote 와 연결해주어야 함.</description></item><item><title>Hello</title><link>https://smjune.github.io/posts/hello/</link><pubDate>Sun, 05 Feb 2023 10:22:18 +0900</pubDate><guid>https://smjune.github.io/posts/hello/</guid><description>github 에서 블로그 만들기 hugo 로컬 빌드를 해서 public 을 submodule 으로 다른 repo 에 push 하는 방식 대신 github action 을 이용하여 1개 repo에서 main 을 빌드 후 gh-pages 브랜치로 deploy 하는 방식 사용
Project Settings | Pages | Build and Deploy | branches : gh-pages 설정 로컬에서는 &amp;lsquo;hugo server&amp;rsquo; 을 이용하여 확인 후 push 함 해당 github pages 을 만든 이력정리 (아래 관련 지식 보유 가정)
* 기본 적인 SSG (Static Site Generator) 관련 정보 * brew, git, github, hugo 설치 및 사용 방법 (Hugo 는 windows 지원) Hugo (SSG) https://gohugo.</description></item></channel></rss>